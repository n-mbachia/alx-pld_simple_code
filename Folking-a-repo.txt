About folk
Creating a folk is producing a personal copy of somoene's elses project. Thus creating a bridge between the original and personal copy of the repo.

Folking a repo
You might fork a project to propose changes to the upstream, or original, repository. In this case, it's good practice to regularly sync your fork with the upstream repository. To do this, you'll need to use Git on the command line. You can practice setting the upstream repository using the same octocat/Spoon-Knife repository you just forked.

On GitHub.com, navigate to the repository.
In the top-right corner of the page, click Fork.
Fork button
Select an owner for the forked repository.
Create a new fork page with owner dropdown emphasized
By default, forks are named the same as their parent repositories. You can change the name of the fork to distinguish it further.
Create a new fork page with repository name field emphasized
Optionally, add a description of your fork.
Create a new fork page with description field emphasized
Choose whether to copy only the default branch or all branches to the new fork. For many forking scenarios, such as contributing to open-source projects, you only need to copy the default branch. By default, only the default branch is copied.
Option to copy only the default branch
Click Create fork.
Emphasized create fork button
Note: If you want to copy additional branches from the parent repository, you can do so from the Branches page. For more information, see "Creating and deleting branches within your repository."

Cloning your forked repository
Right now, you have a fork of the repository, but you do not have the files in that repository locally on your computer.

On GitHub.com, navigate to your fork of the Spoon-Knife repository.

Above the list of files, click  Code.
"Code" button

Copy the URL for the repository.

To clone the repository using HTTPS, under "HTTPS", click .
To clone the repository using an SSH key, including a certificate issued by your organization's SSH certificate authority, click SSH, then click .
To clone a repository using GitHub CLI, click GitHub CLI, then click .
The clipboard icon for copying the URL to clone a repository with GitHub CLI
Open Terminal.

Change the current working directory to the location where you want the cloned directory.

Type git clone, and then paste the URL you copied earlier. It will look like this, with your GitHub username instead of YOUR-USERNAME:

$ git clone https://github.com/YOUR-USERNAME/repo-name
Press Enter. Your local clone will be created.

$ git clone https://github.com/YOUR-USERNAME/repo-name
> Cloning into `repo-name`...
> remote: Counting objects: 10, done.
> remote: Compressing objects: 100% (8/8), done.
> remove: Total 10 (delta 1), reused 10 (delta 1)
> Unpacking objects: 100% (10/10), done.
Configuring Git to sync your fork with the original repository
When you fork a project in order to propose changes to the original repository, you can configure Git to pull changes from the original, or upstream, repository into the local clone of your fork.

On GitHub.com, navigate to the octocat/Spoon-Knife repository.

Above the list of files, click  Code.
"Code" button

Copy the URL for the repository.

To clone the repository using HTTPS, under "HTTPS", click .
To clone the repository using an SSH key, including a certificate issued by your organization's SSH certificate authority, click SSH, then click .
To clone a repository using GitHub CLI, click GitHub CLI, then click .
The clipboard icon for copying the URL to clone a repository with GitHub CLI
Open Terminal.

Change directories to the location of the fork you cloned.

To go to your home directory, type just cd with no other text.
To list the files and folders in your current directory, type ls.
To go into one of your listed directories, type cd your_listed_directory.
To go up one directory, type cd ...
Type git remote -v and press Enter. You will see the current configured remote repository for your fork.

$ git remote -v
> origin  https://github.com/YOUR_USERNAME/YOUR_FORK.git (fetch)
> origin  https://github.com/YOUR_USERNAME/YOUR_FORK.git (push)
Type git remote add upstream, and then paste the URL you copied in Step 3 and press Enter. It will look like this:

$ git remote add upstream https://github.com/ORIGINAL_OWNER/Spoon-Knife.git
To verify the new upstream repository you have specified for your fork, type git remote -v again. You should see the URL for your fork as origin, and the URL for the original repository as upstream.

$ git remote -v
> origin    https://github.com/YOUR_USERNAME/YOUR_FORK.git (fetch)
> origin    https://github.com/YOUR_USERNAME/YOUR_FORK.git (push)
> upstream  https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git (fetch)
> upstream  https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git (push)
Now, you can keep your fork synced with the upstream repository with a few Git commands. For more information, see "Syncing a fork."

Editing a fork
You can make any changes to a fork, including:

Creating branches: Branches allow you to build new features or test out ideas without putting your main project at risk.
Opening pull requests: If you are hoping to contribute back to the original repository, you can send a request to the original author to pull your fork into their repository by submitting a pull request.
Find another repository to fork
Fork a repository to start contributing to a project. If you have access to a private repository and the owner permits forking, you can fork the repository to your personal account, or an organization on GitHub Team where you have repository creation permissions. You cannot fork a private repository to an organization using GitHub Free. For more information, see "GitHub's products."

You can browse Explore to find projects and start contributing to open source repositories. For more information, see "Finding ways to contribute to open source on GitHub."

Next Steps
You have now forked a repository, practiced cloning your fork, and configured an upstream repository.

For more information about cloning the fork and syncing the changes in a forked repository from your computer, see "Set up Git."

You can also create a new repository where you can put all your projects and share the code on GitHub. Creating a repository for your project allows you to store code in GitHub. This provides a backup of your work that you can choose to share with other developers. For more information, see â€œCreate a repository.""

Each repository on GitHub is owned by a person or an organization. You can interact with the people, repositories, and organizations by connecting and following them on GitHub. For more information, see "Be social."

GitHub has a great support community where you can ask for help and talk to people from around the world. Join the conversation on GitHub Community.

https://docs.github.com/en/get-started/quickstart/fork-a-repo

